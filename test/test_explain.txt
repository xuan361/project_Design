// jal->addi->subi->beq->jalr->ble->add->sub->sb->sw->lb->lw->and->or->andi->ori
    0000_0100_0001_0000 
  //  imm(4),   rd,  jal    (r1) = pc + 2, pc = pc + 4  //此时(r1) = 2, pc =4

    0110_0011_0001_0001     (r1) = pc + 2, pc = (r3) + 6  //此时(r1) = 4, pc = 10
  //imm,  rs,  rd,  jalr

    0010_0001_0011_1100     
  //imm   rs,  rd,  addi    (r3) = (r1) + 2     // 此时(r3) = 4, pc = 6

    1110_0001_0100_1101
  //imm,  rs,  rd,  subi    (r4) = (r1) - (-2)   //此时(r4) = 4, pc = 8

    0100_0011_1010_0010     (r3) == (r4) ? pc = pc - 6 : pc = pc + 2  //此时pc = 2
  //rt,  rs, offset, beq
    
    0101_0011_0000_0011
  //rt,  rs, offset, ble    (r3) <= (r5) ? pc = pc  : pc = pc + 2     // pc = 12
    
    0100_0011_0101_1000
  //rt,   rs,  rd,  add    (r5) = (r3) + (r4)   //此时(r5) = 8
    
    0100_0011_0110_1001
  //rt,   rs,  rd,  sub    (r6) = (r3) - (r4)   //此时(r6) = 0

    0101_0110_0010_0110
  //rt,  rs,  imm,  sb      ad = (r6) + 2   (ad) = (r5)     //此时第三个存储单元 = 8

    0101_0110_0100_0111
  //rt,  rs,  imm,  sw      ad = (r6) + 4   (ad) = (r5)     //此时第五、六个存储单元 = 8    

    0100_0110_0111_0100
  //imm,  rs,  rd,  lb      ad = (r6) + 4   (r7) = (ad)     //此时(r7) = 0000_0000

    0010_0110_1000_0101
  //imm,  rs,  rd,  lw      ad = (r6) + 2   (r8) = (ad)     //此时(r8) = 0000_1000_0000_0000

    0110_0101_1001_1010
  //rt,   rs,  rd,  and    (r9) = (r5) && (r6)  //此时r9 = 0

    0110_0101_1010_1011
  //rt,   rs,  rd,  or     (r10) = (r5) || (r6)  //此时r10 = 1

    0001_0110_1011_1110
  //imm,  rs,  rd,  andi   (r11) =  1 && (r6)  //此时r11 = 0

    0001_0110_1100_1111
  //imm,  rs,  rd,  ori     (r12) =  1 || (r6) //此时r12 = 1

